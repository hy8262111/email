<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longhu.dao.CategroyMapper">
    <resultMap id="BaseResultMap" type="com.longhu.entity.Categroy">
        <id column="cate_id" jdbcType="INTEGER" property="cateId"/>
        <result column="cate_name" jdbcType="VARCHAR" property="cateName"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
    </resultMap>
    <sql id="Base_Column_List">
    cate_id, cate_name, parent_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from categroy
        where cate_id = #{cateId,jdbcType=INTEGER}
    </select>

    <resultMap id="categoryMap" type="com.longhu.entity.CategroyNode">
        <id column="one_id" property="cateId" javaType="java.lang.Integer"></id>
        <result column="one_name" property="cateName" javaType="java.lang.String"></result>
        <!-- 一对多collection中一定要用ofType -->
        <collection property="categroys" ofType="com.longhu.entity.CategroyNode">
            <id column="two_id" property="cateId" javaType="java.lang.Integer"></id>
            <result column="two_name" property="cateName" javaType="java.lang.String"></result>

            <collection property="categroys" ofType="com.longhu.entity.CategroyNode">
                <id column="three_id" property="cateId" javaType="java.lang.Integer"></id>
                <result column="three_name" property="cateName" javaType="java.lang.String"></result>
            </collection>
        </collection>
    </resultMap>


    <select id="findAll" resultMap="categoryMap" parameterType="int">
        SELECT
          c1.`cate_id` one_id,
          c1.`cate_name` one_name,
          c2.`cate_id` two_id,
          c2.`cate_name` two_name,
          c3.`cate_id` three_id,
          c3.`cate_name` three_name
        FROM
          categroy c1
          LEFT JOIN categroy c2
            ON c2.`parent_id` = c1.`cate_id`
          LEFT JOIN categroy c3
            ON c3.`parent_id` = c2.`cate_id`
            WHERE c1.`parent_id` = '0'
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from categroy
    where cate_id = #{cateId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.longhu.entity.Categroy">
    insert into categroy (cate_id, cate_name, parent_id
      )
    values (#{cateId,jdbcType=INTEGER}, #{cateName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.longhu.entity.Categroy">
        insert into categroy
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cateId != null">
                cate_id,
            </if>
            <if test="cateName != null">
                cate_name,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cateId != null">
                #{cateId,jdbcType=INTEGER},
            </if>
            <if test="cateName != null">
                #{cateName,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.longhu.entity.Categroy">
        update categroy
        <set>
            <if test="cateName != null">
                cate_name = #{cateName,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
        </set>
        where cate_id = #{cateId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.longhu.entity.Categroy">
    update categroy
    set cate_name = #{cateName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER}
    where cate_id = #{cateId,jdbcType=INTEGER}
  </update>
</mapper>